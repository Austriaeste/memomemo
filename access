アクセス数
1.　httpd プロセスが再起動を起こしているかどうかを見てみましょう

ps -ef | grep httpd | grep root | grep -v grep

2.80番ポートが LISTEN 状態であるかを見てみましょう

netstrat -an | grep :80 | grep LISTEN

3.初めに確認した PID に紐づくログの場所を見てみましょう

lsof -p <PID> | grep "log"

4.エラーログを確認
cat /var/log/httpd/error_log | grep "Sep 03 23:1[3-6]"

5.アクセス数を確認
for N in {0,1,2,3,4,5} ;do echo "08:$N";grep "28/Apr/2018:23:$N" /etc/httpd/logs/access_log | wc -l ;done



ディスク
2.現在の使用量を見てみましょう

df -h <対象領域>

3.容量を圧迫しているベスト10位までを表示します。

du -hx <対象領域> | sort -nr | head

4.前項で確認した容量を圧迫しているものがファイルなのか、ディレクトリなのかを特定します。

ls -lt <前項で表示したもの>



LB
5 秒後に upしている事を確認
cat /var/log/ltm | grep "monitor status"

available 状態である事を確認
[root@bigip:Active] config#tmsh show ltm pool http-pool members | grep -A30 "Ltm"::Pool:http-pool
Ltm::Pool: http-pool
--------------------------------------
Status
  Availability : available
  State        : enabled
  Reason       : The pool is available

Traffic                ServerSide
  Bits In                   37.3K
  Bits Out                  52.0K
  Packets In                   64
  Packets Out                  43
  Current Connections           0
  Maximum Connections           2
  Total Connections            15

Ltm::Pool Member: http-pool  10.10.40.40:012345
-------------------------------------------
Status
  Availability : available
  State        : enabled
  Reason       : Pool member is available

Traffic                ServerSide  General
  Bits In                   37.3K        -
  Bits Out                  52.0K        -
  Packets In                   64        -
  Packets Out                  43        -
  Current Connections           0        -
  Maximum Connections           2        -
  Total Connections            15        -
  Total Requests                -       10
  [root@bigip:Active] config#



CPU
1.今日の00:00から現在時刻までのCPU使用率の推移を見てみましょう

sar -u

2.どんなcronが格納されているのかを見てみましょう

crontab -l

3.スケジューラを所有しているユーザ名を見てみましょう

ls -al /var/spool/cron/

4.アラート検知時間帯に、バッチ処理が走っていたかを見てみましょう

cat /var/spool/cron/<前項で表示したユーザ名>

5.コマンドの実行結果と、アラートの検知結果を比較し、アラートの発生原因が cron 実行によるものなのかを見てみましょう

cat /var/log/messages | grep "cron failed"


メモリ使用率調査
1.まずはともあれメモリ使用率を見てみましょう

cat /etc/redhat-release

free -k

RHEL6

free -k |grep "Mem" |awk '{print($2-$4-$6-$7)/$2*100}'

もしくは

RHEL7

free -k |grep "Mem" |awk '{print($2-$4-$6)/$2*100}'



NW機器
事象
1.R1 より、192.168.3.1　の BGP インターフェースダウンを検知。
2.10分後に、Tunnel1 のダウンを検知

対応
1.検知メッセージより、neighbor ルータの IP アドレスが 192.168.3.1 である事を確認
show ip interface brief

2.Tunnel のステータスが「up」している事を確認
show ip interface brief

3.R0[12]にて再起動が発生していない事を確認
show version | inc uptimne

4.CPU 負荷の高騰は見受けられない事を確認
show process cpu history 

5.メモリ負荷の高騰は見受けられない事を確認
show mem summary

6.neighbor の機器は　XX　である事を確認
show run | inc 192.168.3.1

7.現状 BGP のステータスは「up」している事を確認
show logging
